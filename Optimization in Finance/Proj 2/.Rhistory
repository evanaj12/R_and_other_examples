constraints[1,]<-c(105, 3.5, 5, 3.5, 4, 9, 6, 8, 9, 7)
constraints[2,]<-c(0, 103.5, 105, 3.5, 4, 9, 6, 8, 9, 7)
constraints[3,]<-c(0, 0, 0, 103.5, 4, 9, 6, 8, 9, 7)
constraints[4,]<-c(0, 0, 0, 0, 104, 9, 6, 8, 9, 7)
constraints[5,]<-c(0, 0, 0, 0, 0, 109, 106, 8, 9, 7)
constraints[6,]<-c(0, 0, 0, 0, 0, 0, 0, 108, 9, 7)
constraints[7,]<-c(0, 0, 0, 0, 0, 0, 0, 0, 109, 7)
constraints[8,]<-c(0, 0, 0, 0, 0, 0, 0, 0, 0, 107)
c<-c(102, 99, 101, 98, 98, 98, 104, 100, 101, 101, 102, 94)
b<-c(12000, 18000, 20000, 20000, 16000, 15000, 12000, 10000)
dir<-c(rep(">=",8))
s = lp ("min",c,constraints,dir,b,compute.sens=T)
s$solution
constraints=matrix(0,8,10)
constraints[1,]<-c(105, 3.5, 5, 3.5, 4, 9, 6, 8, 9, 7)
constraints[2,]<-c(0, 103.5, 105, 3.5, 4, 9, 6, 8, 9, 7)
constraints[3,]<-c(0, 0, 0, 103.5, 4, 9, 6, 8, 9, 7)
constraints[4,]<-c(0, 0, 0, 0, 104, 9, 6, 8, 9, 7)
constraints[5,]<-c(0, 0, 0, 0, 0, 109, 106, 8, 9, 7)
constraints[6,]<-c(0, 0, 0, 0, 0, 0, 0, 108, 9, 7)
constraints[7,]<-c(0, 0, 0, 0, 0, 0, 0, 0, 109, 7)
constraints[8,]<-c(0, 0, 0, 0, 0, 0, 0, 0, 0, 107)
c<-c(102, 99, 101, 98, 98, 104, 100, 101, 102, 94)
b<-c(12000, 18000, 20000, 20000, 16000, 15000, 12000, 10000)
dir<-c(rep(">=",8))
s = lp ("min",c,constraints,dir,b,compute.sens=T)
s$solution
?lp
require("lpSolve")
?lp
x<-c(0,10,70,100)
y<-c(0,0.09, 0.8,1)
plot(x,y)
lines(x,y)
x1<-c(0,10,70,100)
y1<-c(0,0.09, 0.8,1)
x2<-c(0,100)
y2<-c(0,1)
plot(x1,y1)
plot(x2,y2)
lines(x1,y1)
lines(x2,y2)
x1<-c(0,10,70,100)
y1<-c(0,0.09, 0.8,1)
x2<-c(0,100)
y2<-c(0,1)
plot(x1,y1)
plot(x2,y2)
lines(x1,y1, col="red")
lines(x2,y2, col="blue")
plot(x1,y1)
lines(x1,y1, col="red")
lines(x2,y2, col="blue")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
lines(40, dotted)
lines(40, style=dash)
lines(40, style=2)
lines(40, type=2)
?lines
lines(40,, type=2)
lines(40,, type=1)
lines(40,, type="2")
lines(40,0, type="2")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
a
b
c
source('~/Desktop/UT 2015-2016/Sem 1/Optimization Methods in Finance STA 372/Code/hw3_eaj628.R', echo=TRUE)
s$solution
s$objval
source('~/Desktop/UT 2015-2016/Sem 1/Optimization Methods in Finance STA 372/Code/hw3_eaj628.R', echo=TRUE)
#LP2: add constraint of x(1)>=4
#constraints
a<-matrix(c(-10,20,5,10,1,0,1,0), nrow=4, byrow=T)
#direction
dir<-c("<=","<=","<=",">=")
#constraints continued
b<-c(22,49,5,4)
#LP2
s2<-lp("max",c,a,dir,b,compute.sens=T)
s2$solution
s2$objval
a
b
dir
#LP3: add constraint of x(2)<=2 to left branch (see homework)
#constraints
a<-matrix(c(-10,20,5,10,1,0,0,1), nrow=4, byrow=T)
#direction
dir<-c("<=","<=","<=","<=")
#constraints continued
b<-c(22,49,3,2)
#LP3
s3<-lp("max",c,a,dir,b,compute.sens=T)
s3$solution
s3$objval
#LP4: add constraint of x(2)>=2 to left branch (see homework)
#constraints
a<-matrix(c(-10,20,5,10,1,0,0,1), nrow=4, byrow=T)
#direction
dir<-c("<=","<=","<=",">=")
#constraints continued
b<-c(22,49,3,3)
#LP4
s4<-lp("max",c,a,dir,b,compute.sens=T)
s4$solution
s4$objval
#LP5: add constraint of x(2)<=2 to right branch (see homework)
#constraints
a<-matrix(c(-10,20,5,10,1,0,0,1), nrow=4, byrow=T)
#direction
dir<-c("<=","<=","<=","<=")
#constraints continued
b<-c(22,49,5,2)
#LP5
s5<-lp("max",c,a,dir,b,compute.sens=T)
s5$solution
s5$objval
#LP5: add constraint of x(2)<=2 to right branch (see homework)
#constraints
a<-matrix(c(-10,20,5,10,1,0,1,0,0,1), nrow=5, byrow=T)
#direction
dir<-c("<=","<=","<=",">=","<=")
#constraints continued
b<-c(22,49,5,4,2)
#LP5
s5<-lp("max",c,a,dir,b,compute.sens=T)
s5$solution
s5$objval
#LP6: add constraint of x(2)>=3 to right branch (see homework)
#constraints
a<-matrix(c(-10,20,5,10,1,0,1,0,0,1), nrow=5, byrow=T)
#direction
dir<-c("<=","<=","<=",">=",">=")
#constraints continued
b<-c(22,49,5,4,3)
#LP6
s6<-lp("max",c,a,dir,b,compute.sens=T)
s6$solution
s6$objval
#LP7: add constraint of x(1)<=1 to left branch (see homework)
#constraints
a<-matrix(c(-10,20,5,10,1,0,0,1), nrow=4, byrow=T)
#direction
dir<-c("<=","<=","<=","<=")
#constraints continued
b<-c(22,49,1,2)
#LP7
s7<-lp("max",c,a,dir,b,compute.sens=T)
s7$solution
s7$objval
#LP8: add constraint of x(1)>=2 to left branch (see homework)
#constraints
a<-matrix(c(-10,20,5,10,1,0,0,1,1,0), nrow=5, byrow=T)
#direction
dir<-c("<=","<=","<=","<=",">=")
#constraints continued
b<-c(22,49,3,2,2)
#LP8
s8<-lp("max",c,a,dir,b,compute.sens=T)
s8$solution
s8$objval
?lp
#Part 2: integer program
#constraints
a<-matrix(c(-10,20,5,10,1,0), nrow=3, byrow=T)
#direction
dir<-c("<=","<=","<=")
#constraints continued
b<-c(22,49,5)
ss<-lp("max",c,a,dir,b,compute.sens=T, all.int=T)
ss$solution
ss$solution
ss$objval
#maximization matrix
c<-c(3,2,1,2)
#constraints
a<-matrix(c(6,3,5,2,
1,0,1,0,
0,1,0,1,
1,1,0,0,
0,0,1,0,
0,0,0,1), nrow=6, byrow=T)
#direction
dir<-c("<=","<=","<=",">=","<=","<=")
#constraints continued
b<-c(11,1,1,1,1,1)
#integer program
ss2<-lp("max",c,a,dir,b,compute.sens=T, all.int=T)
ss2$solution
ss2$objval
c<-matrix(c(rep(90, 14), rep(60, 14)*5, rep(90,14)), nrow=7, byrow=T)
c
c<-matrix(c(rep(90, 14), rep(60, 14*5), rep(90,14)), nrow=7, byrow=T)
c
c
c<-matrix(c(rep(90, 14), rep(60, 14*5), rep(90,14)), nrow=7, byrow=T)
#constraints
a<-matrix(c(rep(1,14), ))
#direction
dir<-c(rep(">=",7))
#constraints continued
b<-c(90,rep(60,5), 90)
dir
b
a
a<-matrix(c(rep(1,14)), nrow=7, byrow=T)
a
c<-matrix(c(rep(0,98)), nrow=14)
c
c<-matrix(c(rep(0,98)), nrow=7)
c
c<-matrix(c(rep(0,98*14)), nrow=14)
c
c[1:7]<-c(90,rep(60,5), 90)
c
c[1:1, 1:7]<-c(90,rep(60,5), 90)
c
c<-matrix(c(rep(0,98*14)), nrow=14)
c[1:1, 1:7]<-c(90,rep(60,5), 90)
c[2:2, 8:14]<-c(90,rep(60,5), 90)
c[3:3, 15:21]<-c(90,rep(60,5), 90)
c[4:4, 22:28]<-c(90,rep(60,5), 90)
c[5:5, 29:35]<-c(90,rep(60,5), 90)
c[6:6, 36:42]<-c(90,rep(60,5), 90)
c[7:7, 43:49]<-c(90,rep(60,5), 90)
c[8:8, 50:56]<-c(90,rep(60,5), 90)
c[9:9, 57:63]<-c(90,rep(60,5), 90)
c[10:10, 64:70]<-c(90,rep(60,5), 90)
c[11:11, 71:77]<-c(90,rep(60,5), 90)
c[12:12, 78:84]<-c(90,rep(60,5), 90)
c[13:13, 85:91]<-c(90,rep(60,5), 90)
c[14:14, 92:98]<-c(90,rep(60,5), 90)
c
source('~/Desktop/UT 2015-2016/Sem 1/Optimization Methods in Finance STA 372/Code/InvChoiceExample.R', echo=TRUE)
A
source('~/Desktop/UT 2015-2016/Sem 1/Optimization Methods in Finance STA 372/Code/pigSkin.R', echo=TRUE)
A
?seq
c<-c(rep(1,89))
c[seq(1,98,7)]<-90
c[seq(2,98,7)]<-60
c[seq(3,98,7)]<-60
c[seq(4,98,7)]<-60
c[seq(5,98,7)]<-60
c[seq(6,98,7)]<-60
c[seq(7,98,7)]<-90
c
c<-c(rep(1,98))
c[seq(1,98,7)]<-90
c[seq(2,98,7)]<-60
c[seq(3,98,7)]<-60
c[seq(4,98,7)]<-60
c[seq(5,98,7)]<-60
c[seq(6,98,7)]<-60
c[seq(7,98,7)]<-90
c
a<-matrix(c(rep(0,98*35)), nrow=35)
a
c
a<-matrix(c(rep(0,98*35)), nrow=35)
req<-c(1,rep(0,6))
a[1,]<-rep(req,14)
a
a<-matrix(c(rep(0,98*35)), nrow=35)
req<-c(1,rep(0,6))
for (i in 1:7){
a[i,]<-rep(req,14)
}
a
?diag
req<-diag(1,7,7)
req
a<-matrix(c(rep(0,98*35)), nrow=35)
req<-diag(1,7,7)
for (i in 1:14){
a[1:7, i:i+7]<-req
}
a<-matrix(c(rep(0,98*35)), nrow=35)
req<-diag(1,7,7)
for (i in 1:14){
a[1:7, i:i+6]<-req
}
a<-matrix(c(rep(0,98*35)), nrow=35)
req<-diag(1,7,7)
for (i in 1:14){
a[1:7, i*7:i*7+6]<-req
}
req<-diag(1,7,7)
for (i in 1:14){
a[1:7, i*7:i*7+7]<-req
}
req
a<-matrix(c(rep(0,98*35)), nrow=35)
req<-diag(1,7,7)
for (i in 1:14){
a[1:7, i*7-6:i*7]<-req
}
a<-matrix(c(rep(0,98*35)), nrow=35)
req<-diag(1,7,7)
for (i in 1:14){
a[1:7, i*7-6:i*7]<-9
}
a
a<-matrix(c(rep(0,98*35)), nrow=35)
req<-diag(1,7,7)
for (i in 1:7){
a[1:7, i*7-6:i*7]<-req
}
a[1:7, 1*7-6:1*7]<-req
a
a[1:7, 1:7]<-req
q
a
a[1:7, 8:14]<-req
a
a<-matrix(c(rep(0,98*35)), nrow=35)
req<-diag(1,7,7)
for (i in 1:14){
a[1:7, i*7-6:i*7]<-req
}
a<-matrix(c(rep(0,98*35)), nrow=35)
req<-diag(1,7,7)
for (i in 1:14){
a[1:7, (i*7-6):(i*7)]<-req
}
a
a<-matrix(c(rep(0,98*35)), nrow=35)
req<-diag(1,7,7)
for (i in 1:14){
a[1:7, (i*7-6):(i*7)]<-req
}
five<-c(rep(1,7))
for (i in 1:14){
a[i,(i*7-6):(i*7)]<-five
}
a
#Problem 3
#minimization matrix
schedule_costs<c(330, rep(360,4), 330, 300)
#constraints
constraints<-matrix(
c(0,1,1,1,1,1,0,
0,0,1,1,1,1,1,
1,0,0,1,1,1,1,
1,1,0,0,1,1,1,
1,1,1,0,0,1,1,
1,1,1,1,0,0,1,
1,1,1,1,1,0,0),
nrow=7, byrow=T)
#direction
dir<-c(rep(">=",7))
#constraints continued
b<-c(5, 13, 12, 10, 14, 8, 6)
requirements<-c(5, 13, 12, 10, 14, 8, 6)
schedule_costs<-c(330, rep(360,4), 330, 300)
b<-
null
b<-null
b<-""
clear(b)
source('~/Desktop/UT 2015-2016/Sem 1/Optimization Methods in Finance STA 372/Code/hw3_eaj628.R', echo=TRUE)
ss3$solution
ss3$objval
source('~/Desktop/UT 2015-2016/Sem 1/Optimization Methods in Finance STA 372/Code/hw3_eaj628.R', echo=TRUE)
source('~/Desktop/UT 2015-2016/Sem 1/Optimization Methods in Finance STA 372/Code/hw3_eaj628.R', echo=TRUE)
source('~/Desktop/UT 2015-2016/Sem 1/Optimization Methods in Finance STA 372/Code/pigSkin.R', echo=TRUE)
S = lp("min",obj,A,dir,b,binary.vec=7:12,compute.sens=T)
library(lpSolve)
source('~/Desktop/UT 2015-2016/Sem 1/Optimization Methods in Finance STA 372/Code/pigSkin.R', echo=TRUE)
S = lp("min",obj,A,dir,b,int.vec=c(1:6, 13:18),binary.vec=7:12,compute.sens=T)
S$solution
S
A
source('~/Desktop/UT 2015-2016/Sem 1/Optimization Methods in Finance STA 372/Code/pigSkin.R', echo=TRUE)
A
b
source('~/Desktop/UT 2015-2016/Sem 1/Optimization Methods in Finance STA 372/Code/pigSkin.R', echo=TRUE)
source('~/Desktop/UT 2015-2016/Sem 1/Optimization Methods in Finance STA 372/Code/pigSkin.R', echo=TRUE)
plot(invValues, objValues, "b")
dir
?grobe
??grobe
setwd("~/Desktop/UT 2015-2016/Sem 1/Optimization Methods in Finance STA 372/Projects/Proj 2")
source('readData.R')
q=25
source('similarityMat.R')
source('constructFund.R')
source('constructFund.R')
source('constructFund.R')
weights<-constructFund(correlations, 25, priceMat, sharesMat, unique_tickers, unique_dates)
selected<-constructFund2(correlations, 25, priceMat, sharesMat, unique_tickers, unique_dates)
amt_inv<-weights*10^6
#Creates vector of the prices at the end of 2012 for the selected stocks
prices<-(selected*priceMat[250,])
#Remove zeros from said vector
selected_prices<-prices[prices!=0]
#Creates vector of the number of shares purchased in each of the 25 stocks
# using the prices found above
selected_shares<-(amt_inv/selected_prices)
#Creates matrix for the prices of the 25 stocks in 2013 by first initalizing
# an empty 12 x 25 matrix then filled with the prices of the 25 selected and
# collapsing the matrix to one of size 12 x 25
prices2013<-matrix(c(rep(0,12*25)), nrow=12)
for (i in (1:12)){
vec<-(monthlyPriceMat[i,]*selected)
prices2013[i,]<-vec[vec!=0]
}
#Calculates returns matrix for the first fund (correlation-based)
returns_correlation<-matrix(0,12,25)
for (i in 1:ncol(returns_correlation)){
for (x in 2:nrow(returns_correlation)){
p1<-prices2013[x-1,i]
p2<-prices2013[x,i]
returns_correlation[x,i]<-(p2-p1)/p1
}
}
#Finds the mean of each row of the first fund as a portfolio return
portfolio_return1<-rowMeans(returns_correlation)
#Calculate returns for NASDAQ 100 index with the 25 selected stocks from the
# given information in the problem.
prices_N<-c(2731.53, 2738.58, 2818.69, 2887.44, 2981.76, 2909.60, 3090.19, 3073.81, 3218.20, 3377.73, 3487.82, 3592.00)
returns_N<-c(rep(0,12))
for (i in (2:length(prices_N))){
returns_N[i]<-(prices_N[i]-prices_N[i-1])/prices_N[i-1]
}
#Visualizations
library("ggplot2")
month<-seq(1,12)
fund1<-data.frame(returns_N, portfolio_return1, month)
plot1<-ggplot(fund1, aes(x=month))+
geom_point(aes(y=returns_N), size=3, color="blue")+
geom_line(aes(y=returns_N), size=1, color="blue", linetype=2)+
geom_point(aes(y=portfolio_return1), size=3, color="red")+
geom_line(aes(y=portfolio_return1), size=1, color="red")+
scale_x_discrete(name="Month")+
scale_y_continuous(name="Returns", breaks=seq(-0.05,0.15,0.01))
#Blue line: NASDAQ returns with the portfolio
#Red line: Correlation portfolio returns
#plot1
#Dataframe with our returns of NASDAQ vs those of the correlation fund.
#fund1
#####################################
#5 Repeat step 4 with a new similarity matrix
source('similarityMat.R')
rho<-similarityMat(priceMat)
weights_new<-constructFund(rho, 25, 100, priceMat, sharesMat)
selected_new<-constructFund2(rho, 25, 100, priceMat, sharesMat)
amt_inv_new<-weights_new*10^6
prices_new<-(selected_new*priceMat[250,])
rho<-similarityMat(priceMat, sharesMat, unique_tickers,unique_dates)
weights_new<-constructFund(rho, 25, 100, priceMat, sharesMat)
selected_new<-constructFund2(rho, 25, 100, priceMat, sharesMat)
rho<-similarityMat(priceMat, sharesMat, unique_tickers,unique_dates)
weights_new<-constructFund(rho, 25, 100, priceMat, sharesMat)
weights_new<-constructFund(rho, 25, 100, priceMat, sharesMat, unique_tickers,unique_dates)
weights_new<-constructFund(rho, 25, priceMat, sharesMat, unique_tickers, unique_dates)
selected_new<-constructFund2(rho, 25, priceMat, sharesMat, unique_tickers, unique_dates)
amt_inv_new<-weights_new*10^6
prices_new<-(selected_new*priceMat[250,])
selected_prices_new<-prices_new[prices_new!=0]
selected_shares_new<-(amt_inv/selected_prices_new)
prices2013_new<-matrix(c(rep(0,12*25)), nrow=12)
for (i in (1:12)){
vec<-(monthlyPriceMat[i,]*selected_new)
prices2013_new[i,]<-vec[vec!=0]
}
#Re-Calculate Returns for new index
returns_rho<-matrix(0,12,25)
for (i in 1:ncol(returns_rho)){
for (x in 2:nrow(returns_rho)){
p1<-prices2013_new[x-1,i]
p2<-prices2013_new[x,i]
returns_rho[x,i]<-(p2-p1)/p1
}
}
portfolio_return2<-rowMeans(returns_rho)
#Visualizations
fund2<-data.frame(returns_N, portfolio_return1, portfolio_return2, month)
plot2<-ggplot(fund2, aes(x=month))+
geom_point(aes(y=returns_N), size=3, color="blue")+
geom_line(aes(y=returns_N), size=1, color="blue", linetype=2)+
geom_point(aes(y=portfolio_return1), size=2, color="red")+
geom_line(aes(y=portfolio_return1), size=2, color="red", linetype=3)+
geom_point(aes(y=portfolio_return2), size=3, color="dark green")+
geom_line(aes(y=portfolio_return2), size=1, color="dark green")+
scale_x_discrete(name="Month")+
scale_y_continuous(name="Returns", breaks=seq(-0.05,0.15,0.01))
#Blue line: NASDAQ returns with the portfolio
#Red line: Correlation portfolio returns
#Green line: R-squared portfolio returns
plot2
source('readData.R')
q=25
source('similarityMat.R')
source('constructFund.R')
selected
selected_new
sum(selected)
sum(selected_new)
selected==selected_new
rho=similarityMat(priceMat, sharesMat, unique_tickers, unique_dates)
weights=(rho, q, priceMat, sharesMat, unique_tickers, unique_dates)
weights=(rho, q, priceMat, sharesMat, unique_tickers, unique_dates)
weights=constructFund(rho, q, priceMat, sharesMat, unique_tickers, unique_dates)
